---
//import Theme from "@/icons/themeSwitch.astro";
---

<div class="no-print inline-flex items-center">
	<div class="group/theme flex items-center gap-2">
		<div class="flex flex-row justify-between toggle">
			<button id="theme-toggle" title="darkmode" class="p-2 rounded-full bg-transparent transition hover:scale-125 transition-transform duration-200">
				<svg id="sun-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="orange" class="h-7 w-7">
					<path d="M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z" />
				</svg>
				<svg id="moon-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white" class="h-6 w-6">
					<path fill-rule="evenodd" d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z" clip-rule="evenodd" />
				</svg>
			</button>
		</div>
	</div>

	<style>
		:global(.dark) {
			color-scheme: dark;
		}

		input:checked ~ .dot {
			transform: translateX(100%);
			/* background-color: #132b50; */
		}

	</style>

	<script>

		// Gestion du darkmode
		// Charger le mode préféré depuis localStorage
		document.addEventListener("DOMContentLoaded", function () {
			function getSavedTheme() {
				return localStorage.getItem('theme'); // Récupère la préférence enregistrée
			}

			// Charger le thème du système
			function getSystemTheme() {
				return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'; // Récupère la préférence du système
			}

			function initTheme() {
				const savedTheme = getSavedTheme();
				return savedTheme ? savedTheme : getSystemTheme();
			}

			// Initialiser le thème
			const themePreference = initTheme();

			const sunicon = document.getElementById("sun-icon")
			const moonicon = document.getElementById("moon-icon")

			// Appliquer le thème préféré
			if (themePreference === "dark") {
				document.documentElement.classList.add("dark");
				localStorage.setItem("theme", "dark");
				if (sunicon) sunicon.classList.add("hidden");
				if (moonicon) moonicon.classList.remove("hidden");
			} else {
				document.documentElement.classList.remove("dark");
				localStorage.setItem("theme", "light");
				if (sunicon) sunicon.classList.remove("hidden");
				if (moonicon) moonicon.classList.add("hidden");
			}

			// toggle pour le dark mode
			const themeToggle = document.getElementById("theme-toggle");
			const htmlElement = document.documentElement;

			function toggleTheme() {
				if (htmlElement.classList.contains("dark")) {
					//console.log('remove dark');
					htmlElement.classList.remove("dark");
					localStorage.setItem("theme", "light");
					if (sunicon) sunicon.classList.remove("hidden");
					if (moonicon) moonicon.classList.add("hidden");
				} else {
					//console.log('add dark');
					htmlElement.classList.add("dark");
					localStorage.setItem("theme", "dark");
					if (sunicon) sunicon.classList.add("hidden");
					if (moonicon) moonicon.classList.remove("hidden");
				}
			}

			if (themeToggle) themeToggle.addEventListener("click", toggleTheme);

		});

	</script>
</div>
